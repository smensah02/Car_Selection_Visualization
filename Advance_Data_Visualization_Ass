{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Content of the “car details”\n",
    "# This script below gets the data for every day of a given year (example is 2009), #load every month (1 through #12) and then load every day of each month.\n",
    "import urllib.request\n",
    "from bs4 import BeautifulSoup\n",
    "from pprint import pprint"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create/open a file called wunder.txt (which will be a comma-delimited file)\n",
    "# f = open('wunder-data.txt','w')\n",
    "\n",
    "# # Iterate through months and day\n",
    "# for m in range(1,13):\n",
    "#     for d in range(1,32):\n",
    "\n",
    "# # Check if already gone through month\n",
    "#         if(m==2 and d>28):\n",
    "#             break\n",
    "#         elif(m in [4,6,9,11] and d>30):\n",
    "#             break\n",
    "\n",
    "# # Open wunderground.com url\n",
    "#         timestamp = '2009-'+str(m)+\"-\"+str(d)\n",
    "#         print(\"getting data for\"+timestamp)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "url = \"https://www.wunderground.com/history/daily/us/ny/buffalo/KBUF/date/2009-\"+str(m)+\"-\"+str(d)\n",
    "        page = urllib.request.urlopen(url)\n",
    "       \n",
    "#Get temperature from page\n",
    "        soup = BeautifulSoup(page)\n",
    "        \n",
    "               dayTemp = soup.findAll(attrs={\"class\":\"wx-value\"})[0].string\n",
    "       \n",
    "# Format month for timestamp\n",
    "        if len(str(m)) < 2:\n",
    "            mStamp = '0' + str(m)\n",
    "        else:\n",
    "            mStamp = str(m)\n",
    "       \n",
    "        if len(str(d)) < 2:\n",
    "            dStamp = '0' + str(d)\n",
    "        else:\n",
    "            dStamp = str(d)\n",
    "       \n",
    "        timestamp = '2009' + mStamp + dStamp\n",
    "       \n",
    "        f.write(timestamp + ',' + dayTemp + '\\n')\n",
    "f.close()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
